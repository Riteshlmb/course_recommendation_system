{"ast":null,"code":"// src/actions/authActions.js\nimport axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport axiosInstance, { updateAxiosInstanceToken } from \"../utils/axiosInstance\";\nimport { LOGOUT, AUTH_ERROR } from \"./types\";\nexport const loginUser = (credentials, history) => dispatch => {\n  axiosInstance.post(\"/auth/token/login/\", credentials).then(res => {\n    const {\n      token,\n      user\n    } = res.data;\n    // Save token to localStorage\n    localStorage.setItem(\"token\", token);\n\n    // Set token to Axios headers\n    setAuthToken(token);\n    dispatch({\n      type: \"LOGIN_SUCCESS\",\n      payload: {\n        token,\n        user\n      }\n    });\n    history.push(\"/\");\n  }).catch(err => {\n    dispatch({\n      type: \"AUTH_ERROR\"\n    });\n  });\n};\nexport const registerUser = (userData, history) => dispatch => {\n  axiosInstance.post(\"/auth/users/\", userData).then(res => {\n    const {\n      token,\n      user\n    } = res.data;\n    dispatch({\n      type: \"REGISTER_SUCCESS\",\n      payload: {\n        token,\n        user\n      }\n    });\n    history.push(\"/\");\n  }).catch(err => {\n    dispatch({\n      type: \"AUTH_ERROR\"\n    });\n  });\n};\nexport const logoutUser = () => dispatch => {\n  axiosInstance.post(\"/auth/token/logout/\").then(() => {\n    localStorage.removeItem(\"token\");\n    updateAxiosInstanceToken(null);\n    dispatch({\n      type: LOGOUT\n    });\n  }).catch(err => {\n    // Handle error if necessary\n    dispatch({\n      type: AUTH_ERROR,\n      payload: err.response ? err.response.data : {\n        error: \"Network Error\"\n      }\n    });\n  });\n};","map":{"version":3,"names":["axios","setAuthToken","axiosInstance","updateAxiosInstanceToken","LOGOUT","AUTH_ERROR","loginUser","credentials","history","dispatch","post","then","res","token","user","data","localStorage","setItem","type","payload","push","catch","err","registerUser","userData","logoutUser","removeItem","response","error"],"sources":["/Users/sachchidanandtiwari/course-recommendation-frontend/src/actions/authActions.js"],"sourcesContent":["// src/actions/authActions.js\nimport axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport axiosInstance, {\n    updateAxiosInstanceToken,\n} from \"../utils/axiosInstance\";\n\nimport { LOGOUT, AUTH_ERROR } from \"./types\";\n\nexport const loginUser = (credentials, history) => (dispatch) => {\n    axiosInstance\n        .post(\"/auth/token/login/\", credentials)\n        .then((res) => {\n            const { token, user } = res.data;\n            // Save token to localStorage\n            localStorage.setItem(\"token\", token);\n\n            // Set token to Axios headers\n            setAuthToken(token);\n            dispatch({\n                type: \"LOGIN_SUCCESS\",\n                payload: { token, user },\n            });\n            history.push(\"/\");\n        })\n        .catch((err) => {\n            dispatch({\n                type: \"AUTH_ERROR\",\n            });\n        });\n};\n\nexport const registerUser = (userData, history) => (dispatch) => {\n    axiosInstance\n        .post(\"/auth/users/\", userData)\n        .then((res) => {\n            const { token, user } = res.data;\n            dispatch({\n                type: \"REGISTER_SUCCESS\",\n                payload: { token, user },\n            });\n            history.push(\"/\");\n        })\n        .catch((err) => {\n            dispatch({\n                type: \"AUTH_ERROR\",\n            });\n        });\n};\n\nexport const logoutUser = () => (dispatch) => {\n    axiosInstance\n        .post(\"/auth/token/logout/\")\n        .then(() => {\n            localStorage.removeItem(\"token\");\n            updateAxiosInstanceToken(null);\n            dispatch({ type: LOGOUT });\n        })\n        .catch((err) => {\n            // Handle error if necessary\n            dispatch({\n                type: AUTH_ERROR,\n                payload: err.response\n                    ? err.response.data\n                    : { error: \"Network Error\" },\n            });\n        });\n};\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,uBAAuB;AAChD,OAAOC,aAAa,IAChBC,wBAAwB,QACrB,wBAAwB;AAE/B,SAASC,MAAM,EAAEC,UAAU,QAAQ,SAAS;AAE5C,OAAO,MAAMC,SAAS,GAAGA,CAACC,WAAW,EAAEC,OAAO,KAAMC,QAAQ,IAAK;EAC7DP,aAAa,CACRQ,IAAI,CAAC,oBAAoB,EAAEH,WAAW,CAAC,CACvCI,IAAI,CAAEC,GAAG,IAAK;IACX,MAAM;MAAEC,KAAK;MAAEC;IAAK,CAAC,GAAGF,GAAG,CAACG,IAAI;IAChC;IACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;;IAEpC;IACAZ,YAAY,CAACY,KAAK,CAAC;IACnBJ,QAAQ,CAAC;MACLS,IAAI,EAAE,eAAe;MACrBC,OAAO,EAAE;QAAEN,KAAK;QAAEC;MAAK;IAC3B,CAAC,CAAC;IACFN,OAAO,CAACY,IAAI,CAAC,GAAG,CAAC;EACrB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;IACZb,QAAQ,CAAC;MACLS,IAAI,EAAE;IACV,CAAC,CAAC;EACN,CAAC,CAAC;AACV,CAAC;AAED,OAAO,MAAMK,YAAY,GAAGA,CAACC,QAAQ,EAAEhB,OAAO,KAAMC,QAAQ,IAAK;EAC7DP,aAAa,CACRQ,IAAI,CAAC,cAAc,EAAEc,QAAQ,CAAC,CAC9Bb,IAAI,CAAEC,GAAG,IAAK;IACX,MAAM;MAAEC,KAAK;MAAEC;IAAK,CAAC,GAAGF,GAAG,CAACG,IAAI;IAChCN,QAAQ,CAAC;MACLS,IAAI,EAAE,kBAAkB;MACxBC,OAAO,EAAE;QAAEN,KAAK;QAAEC;MAAK;IAC3B,CAAC,CAAC;IACFN,OAAO,CAACY,IAAI,CAAC,GAAG,CAAC;EACrB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;IACZb,QAAQ,CAAC;MACLS,IAAI,EAAE;IACV,CAAC,CAAC;EACN,CAAC,CAAC;AACV,CAAC;AAED,OAAO,MAAMO,UAAU,GAAGA,CAAA,KAAOhB,QAAQ,IAAK;EAC1CP,aAAa,CACRQ,IAAI,CAAC,qBAAqB,CAAC,CAC3BC,IAAI,CAAC,MAAM;IACRK,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;IAChCvB,wBAAwB,CAAC,IAAI,CAAC;IAC9BM,QAAQ,CAAC;MAAES,IAAI,EAAEd;IAAO,CAAC,CAAC;EAC9B,CAAC,CAAC,CACDiB,KAAK,CAAEC,GAAG,IAAK;IACZ;IACAb,QAAQ,CAAC;MACLS,IAAI,EAAEb,UAAU;MAChBc,OAAO,EAAEG,GAAG,CAACK,QAAQ,GACfL,GAAG,CAACK,QAAQ,CAACZ,IAAI,GACjB;QAAEa,KAAK,EAAE;MAAgB;IACnC,CAAC,CAAC;EACN,CAAC,CAAC;AACV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}